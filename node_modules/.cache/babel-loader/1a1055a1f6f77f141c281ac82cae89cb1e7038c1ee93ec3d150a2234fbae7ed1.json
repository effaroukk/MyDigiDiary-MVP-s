{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';// Create the AuthContext\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// AuthProvider component to wrap your application\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const navigate=useNavigate();// Check if the user is authenticated when the component mounts\nuseEffect(()=>{const checkAuth=async()=>{const token=localStorage.getItem('token');if(token){try{// Verify token with the backend\nconst response=await axios.get('/api/auth/check',{headers:{'x-auth-token':token}});if(response.data.success){setUser(response.data.user);}else{logout();}}catch(error){console.error('Error during authentication check',error);logout();}}setLoading(false);};checkAuth();},[]);// Function to log in the user\nconst login=async(email,password)=>{try{const response=await axios.post('/api/auth/login',{email,password});if(response.data.success){localStorage.setItem('token',response.data.token);setUser(response.data.user);navigate('/dashboard');// Redirect to dashboard on successful login\nreturn true;}return false;}catch(error){console.error('Error during login',error);return false;}};// Function to log out the user\nconst logout=()=>{localStorage.removeItem('token');setUser(null);navigate('/login');// Redirect to login page after logout\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,loading},children:children});};// Export the AuthContext to be used in other components\nexport default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","navigate","checkAuth","token","localStorage","getItem","response","get","headers","data","success","logout","error","console","login","email","password","post","setItem","removeItem","Provider","value"],"sources":["/root/MyDigiDiary-MVP-s/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Create the AuthContext\nconst AuthContext = createContext();\n\n// AuthProvider component to wrap your application\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated when the component mounts\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Verify token with the backend\n          const response = await axios.get('/api/auth/check', {\n            headers: { 'x-auth-token': token },\n          });\n\n          if (response.data.success) {\n            setUser(response.data.user);\n          } else {\n            logout();\n          }\n        } catch (error) {\n          console.error('Error during authentication check', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  // Function to log in the user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.token);\n        setUser(response.data.user);\n        navigate('/dashboard'); // Redirect to dashboard on successful login\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error during login', error);\n      return false;\n    }\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login'); // Redirect to login page after logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Export the AuthContext to be used in other components\nexport default AuthContext;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACY,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAAc,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B;AACAF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT,GAAI,CACF;AACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAACkB,GAAG,CAAC,iBAAiB,CAAE,CAClDC,OAAO,CAAE,CAAE,cAAc,CAAEL,KAAM,CACnC,CAAC,CAAC,CAEF,GAAIG,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAE,CACzBZ,OAAO,CAACQ,QAAQ,CAACG,IAAI,CAACZ,IAAI,CAAC,CAC7B,CAAC,IAAM,CACLc,MAAM,CAAC,CAAC,CACV,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzDD,MAAM,CAAC,CAAC,CACV,CACF,CACAX,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAEDE,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAY,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAjB,KAAK,CAAC4B,IAAI,CAAC,iBAAiB,CAAE,CAAEF,KAAK,CAAEC,QAAS,CAAC,CAAC,CACzE,GAAIV,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAE,CACzBN,YAAY,CAACc,OAAO,CAAC,OAAO,CAAEZ,QAAQ,CAACG,IAAI,CAACN,KAAK,CAAC,CAClDL,OAAO,CAACQ,QAAQ,CAACG,IAAI,CAACZ,IAAI,CAAC,CAC3BI,QAAQ,CAAC,YAAY,CAAC,CAAE;AACxB,MAAO,KAAI,CACb,CACA,MAAO,MAAK,CACd,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAAD,MAAM,CAAGA,CAAA,GAAM,CACnBP,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAChCrB,OAAO,CAAC,IAAI,CAAC,CACbG,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACtB,CAAC,CAED,mBACET,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EAACC,KAAK,CAAE,CAAExB,IAAI,CAAEiB,KAAK,CAAEH,MAAM,CAAEZ,OAAQ,CAAE,CAAAH,QAAA,CAC3DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}