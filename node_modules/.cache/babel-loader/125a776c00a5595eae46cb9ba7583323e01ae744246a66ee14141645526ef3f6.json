{"ast":null,"code":"var _jsxFileName = \"/root/MyDigiDiary-MVP-s/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthProvider component to wrap your application\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated when the component mounts\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Verify token with the backend\n          const response = await axios.get('/api/auth/check', {\n            headers: {\n              'x-auth-token': token\n            }\n          });\n          if (response.data.success) {\n            setUser(response.data.user);\n          } else {\n            logout();\n          }\n        } catch (error) {\n          console.error('Error during authentication check', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Function to log in the user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.token);\n        setUser(response.data.user);\n        navigate('/dashboard'); // Redirect to dashboard on successful login\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error during login', error);\n      return false;\n    }\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login'); // Redirect to login page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the AuthContext to be used in other components\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","checkAuth","token","localStorage","getItem","response","get","headers","data","success","logout","error","console","login","email","password","post","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/MyDigiDiary-MVP-s/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Create the AuthContext\nconst AuthContext = createContext();\n\n// AuthProvider component to wrap your application\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated when the component mounts\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Verify token with the backend\n          const response = await axios.get('/api/auth/check', {\n            headers: { 'x-auth-token': token },\n          });\n\n          if (response.data.success) {\n            setUser(response.data.user);\n          } else {\n            logout();\n          }\n        } catch (error) {\n          console.error('Error during authentication check', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  // Function to log in the user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      if (response.data.success) {\n        localStorage.setItem('token', response.data.token);\n        setUser(response.data.user);\n        navigate('/dashboard'); // Redirect to dashboard on successful login\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error during login', error);\n      return false;\n    }\n  };\n\n  // Function to log out the user\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    navigate('/login'); // Redirect to login page after logout\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Export the AuthContext to be used in other components\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}